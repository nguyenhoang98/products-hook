{"version":3,"sources":["Components/Cart/Cart.js","Redux/Containers/CartContainers.js"],"names":["Cart","props","cartProducts","updateProductCart","className","map","value","index","src","product","alt","name","description","onClick","id","quantity","price","reduce","total","compose","connect","state","dispatch","update_to_cart"],"mappings":"0KA+EeA,MAzEf,SAAcC,GAAQ,IACZC,EAAoCD,EAApCC,aAAcC,EAAsBF,EAAtBE,kBACtB,OACE,qBAAKC,UAAU,WAAf,SACE,wBAAOA,UAAU,cAAjB,UACE,gCACE,+BACE,0CACA,wCACA,+CACA,yDACA,wCACA,yDAGJ,kCACGF,EAAaG,KAAI,SAACC,EAAOC,GACxB,OACE,+BACE,6BACE,qBACEC,IAAKF,EAAMG,QAAQD,IACnBE,IAAKJ,EAAMG,QAAQE,KACnBP,UAAU,yBAGd,mCAAME,EAAMG,QAAQE,KAApB,OACA,mCAAML,EAAMG,QAAQG,YAApB,OACA,+BACE,wBACEC,QAAS,kBAAMV,EAAkBG,EAAMG,QAAQK,IAAK,IADtD,eAKCR,EAAMS,SACP,wBACEF,QAAS,kBAAMV,EAAkBG,EAAMG,QAAQK,GAAI,IADrD,kBAMF,+BACG,IACAR,EAAMG,QAAQO,MACf,yCAAa,OAEf,+BACG,IACAV,EAAMS,SAAWT,EAAMG,QAAQO,MAFlC,IAEyC,yCAAa,SA9B/CT,MAmCb,+BACE,uBACA,uBACA,uBACA,uBACA,qDACA,+BACG,IACAL,EAAae,QAAO,SAACC,EAAOZ,GAC3B,OAAOY,EAAQZ,EAAMG,QAAQO,MAAQV,EAAMS,WAC1C,GAAI,IACP,wD,wBC3CCI,sBAAQC,aAZC,SAACC,GACvB,MAAO,CACLnB,aAAcmB,EAAMrB,SAGG,SAACsB,GAC1B,MAAO,CACLnB,kBAAmB,SAACW,EAAIC,GACtB,OAAOO,EAASC,YAAeT,EAAIC,SAI1BI,EAlBf,SAAwBlB,GAAQ,IACtBC,EAAoCD,EAApCC,aAAcC,EAAsBF,EAAtBE,kBACtB,OACE,cAAC,EAAD,CAAMD,aAAcA,EAAcC,kBAAmBA","file":"static/js/6.3218cd3e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Cart.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nCart.propTypes = {};\r\n\r\nfunction Cart(props) {\r\n  const { cartProducts, updateProductCart } = props;\r\n  return (\r\n    <div className=\"cart m-t\">\r\n      <table className=\"cart__table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Ảnh</th>\r\n            <th>Tên</th>\r\n            <th>Mô Tả</th>\r\n            <th>Số Lượng</th>\r\n            <th>Giá</th>\r\n            <th>Thành Tiền</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartProducts.map((value, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img\r\n                    src={value.product.src}\r\n                    alt={value.product.name}\r\n                    className=\"cart__table__image\"\r\n                  />\r\n                </td>\r\n                <td> {value.product.name} </td>\r\n                <td> {value.product.description} </td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => updateProductCart(value.product.id, -1)}\r\n                  >\r\n                    -\r\n                  </button>\r\n                  {value.quantity}\r\n                  <button\r\n                    onClick={() => updateProductCart(value.product.id, 1)}\r\n                  >\r\n                    +\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {value.product.price}\r\n                  <sup>đ</sup>{\" \"}\r\n                </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {value.quantity * value.product.price} <sup>đ</sup>{\" \"}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n          <tr>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>Tổng Tiền</td>\r\n            <td>\r\n              {\" \"}\r\n              {cartProducts.reduce((total, value) => {\r\n                return total + value.product.price * value.quantity;\r\n              }, 0)}{\" \"}\r\n              <sup>đ</sup>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport Cart from \"../../Components/Cart/Cart\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { update_to_cart } from \"../Actions/Actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nCartContainers.propTypes = {};\r\n\r\nfunction CartContainers(props) {\r\n  const { cartProducts, updateProductCart } = props;\r\n  return (\r\n    <Cart cartProducts={cartProducts} updateProductCart={updateProductCart} />\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartProducts: state.Cart,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateProductCart: (id, quantity) => {\r\n      return dispatch(update_to_cart(id, quantity));\r\n    },\r\n  };\r\n};\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\r\n  CartContainers\r\n);\r\n"],"sourceRoot":""}